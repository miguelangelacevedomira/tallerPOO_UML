import java.util.*;

public class EstructurasDatos {
    public static void main(String[] args) {

   int[] numeros = new int[5];
        numeros[0] = 10;
        numeros[1] = 20;
        numeros[2] = 30;
        numeros[3] = 40;
        numeros[4] = 50;

String[] frutas = {"Manzana", "Banana", "Cereza"};

 System.out.println("Recorriendo con índice:");
        for (int i = 0; i < frutas.length; i++) {
            System.out.println(frutas[i]);
        }

        System.out.println("Recorriendo con for-each:");
        for (String fruta : frutas) {
            System.out.println(fruta);
        }

ArrayList<Integer> listaNumeros = new ArrayList<>();
        listaNumeros.add(100);
        listaNumeros.add(200);
        listaNumeros.add(300);
        listaNumeros.remove(Integer.valueOf(200)); // elimina el valor 200
        System.out.println("ArrayList después de operaciones:");
        for (int num : listaNumeros) {
            System.out.println(num);
        }

 String[] animales = {"Perro", "Gato", "Loro"};
        List<String> listaAnimales = new ArrayList<>(Arrays.asList(animales));
        System.out.println("Array convertido a ArrayList: " + listaAnimales);

        String[] nuevoArray = listaAnimales.toArray(new String[0]);
        System.out.println("ArrayList convertido a array:");
        for (String animal : nuevoArray) {
            System.out.println(animal);
        }

 LinkedList<String> linkedList = new LinkedList<>();
        linkedList.add("Inicio");
        linkedList.add("Centro");
        linkedList.add("Final");

        System.out.println("LinkedList:");
        for (String item : linkedList) {
            System.out.println(item);
        }

System.out.println("\nArrayList vs LinkedList:");
        System.out.println("- ArrayList es más rápido para acceso por índice.");
        System.out.println("- LinkedList es mejor para inserciones/eliminaciones frecuentes.");

  HashSet<Double> conjunto = new HashSet<>();
        conjunto.add(2.5);
        conjunto.add(3.14);
        conjunto.add(2.5); // duplicado, no se añade
        System.out.println("Elementos en HashSet: " + conjunto);
        System.out.println("Tamaño del HashSet: " + conjunto.size());

 HashMap<String, Integer> edades = new HashMap<>();
        edades.put("mariana", 25);
        edades.put("pablo", 30);
        edades.put("miguel", 22);

System.out.println("Edades:");
        for (Map.Entry<String, Integer> entrada : edades.entrySet()) {
            System.out.println(entrada.getKey() + " tiene " + entrada.getValue() + " años.");
        }

  List<Map.Entry<String, Integer>> listaOrdenada = new ArrayList<>(edades.entrySet());
        listaOrdenada.sort(Map.Entry.comparingByValue());

        System.out.println("Mapa ordenado por edad:");
        for (Map.Entry<String, Integer> entrada : listaOrdenada) {
            System.out.println(entrada.getKey() + ": " + entrada.getValue());
        }
    }
}

 List<String> nombres = new ArrayList<>(Arrays.asList("Juana", "Miguel", "Pedro", "Miguel"));
        Iterator<String> iterador = nombres.iterator();
        while (iterador.hasNext()) {
            if (iterador.next().equals("Luis")) {
                iterador.remove(); // elimina todos los "Luis"
            }
        }
System.out.println("Lista después de eliminar 'Miguel': " + nombres);

boolean contieneAna = nombres.contains("Mariana");
        System.out.println("¿Contiene 'Mariana'? " + contieneMariana);

nombres.clear();
        System.out.println("¿Lista vacía después de clear()? " + nombres.isEmpty());
    }
}


